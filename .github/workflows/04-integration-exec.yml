# CI de Nível 04 - Disparo dentro do fluxo de CI de desenvolvimento
name: 'Execução Integrada'

# Gatilho para execução manual do workflow
on:
  workflow_dispatch:

jobs:
  # Job de inspeção de código
  inspection:
    runs-on: ubuntu-latest

    steps:
      # Baixa o código do repositório para o ambiente de execução
      - uses: actions/checkout@v4

      # Instala Yarn globalmente para gerenciar pacotes e dependências
      - name: Instalando Yarn
        run: npm install -g yarn

      # Instala todas as dependências do projeto necessárias para o lint
      - name: Instalando dependências
        run: yarn

      # Executa o ESLint para verificar a padronização e a qualidade do código
      - name: Padronização de código (Lint)
        run: yarn lint

  # Job de testes unitários
  unit:
    runs-on: ubuntu-latest
    needs: [inspection] # Este job depende da conclusão do job de inspeção

    steps:
      # Baixa o código do repositório para o ambiente de execução
      - uses: actions/checkout@v4

      # Instala Yarn para garantir que todas as dependências do projeto sejam gerenciadas adequadamente
      - name: Instalando Yarn
        run: npm install -g yarn

      # Instala todas as dependências necessárias para os testes unitários
      - name: Instalando dependências
        run: yarn

      # Executa os testes unitários para verificar o funcionamento correto de pequenas partes do código
      - name: Testes de Unidade
        run: yarn run test

  # Job de testes E2E com Cypress
  e2e-tests:
    runs-on: ubuntu-latest
    needs: [unit] # Este job depende da conclusão do job de testes unitários

    steps:
      # Baixa o código do repositório para o ambiente de execução
      - uses: actions/checkout@v4

      # Instala Yarn para gerenciar dependências
      - name: Instalando Yarn
        run: npm install -g yarn

      # Instala todas as dependências do projeto, incluindo o Cypress
      - name: Instalando dependências
        run: yarn

      # Instala Playwright, caso esteja sendo usado nos testes
      - name: Instalando Playwright
        run: yarn playwright install

      # Inicia a aplicação localmente para que os testes E2E possam interagir com ela
      - name: Subir aplicação local
        run: yarn start &

      # Executa os testes E2E para simular o comportamento do usuário e verificar o fluxo de ponta a ponta
      - name: Teste E2E (end-to-end)
        run: yarn run e2e
        env:
          URL: 'http://localhost:3000/'

      # Faz o upload do relatório de testes E2E como um artefato para consulta posterior
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: relatorio-de-testes
          path: ./playwright-report

  # Job de deploy
  deploy:
    runs-on: ubuntu-latest
    needs: [e2e-tests] # Este job depende da conclusão dos testes E2E

    steps:
      # Etapa de deploy (simulada aqui com um echo; substituir pelo comando de deploy real)
      - name: Deploy
        run: echo "Step de deploy concluído com sucesso"